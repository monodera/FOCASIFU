#!/usr/bin/env python2
from astropy.io import fits
import numpy as np
import focasifu as fi
import os
'''
file = fi.filibdir+'dastposition1.fits'
if os.path.exists(file):
    print('Do you want to overwrite %s? :[y/n]'%file)
    key = raw_input()
    if key == 'y' or key =='Y':
        print('Removing')
        os.remove(file)
'''

badpix1 = np.array([[735, 3155],
                   [735, 3154],
                   [736, 3155],
                   [736, 3156],
                   [735, 3156],
                   [735, 3153],
                   [736, 3152],
                   [737, 3152],
                   [737, 3154],
                   [736, 3154],
                   [736, 3153],
                   [737, 3153],
                   [268, 2697],
                   [268, 2696],
                   [268, 2695],
                   [268, 2694],
                   [267, 2696],
                   [267, 2695],
                   [269, 2696],
                   [173, 1878],
                   [173, 1877],
                   [174, 1878],
                   [174, 1877],
                   [174, 1876],
                   [175, 1878],
                   [175, 1877],
                   [240, 1836],
                   [241, 1837],
                   [241, 1836],
                   [242, 1836],
                   [242, 1837],
                   [242, 1835],
                   [243, 1835],
                   [244, 1835],
                   [244, 1834],
                   [243, 1834],
                   [243, 1833],
                   [244, 1833],
                   [243, 1832],
                   [243, 1831],
                   [243, 1830],
                   [242, 1831],
                   [242, 1830],
                   [242, 1829],
                   [241, 1830],
                   [241, 1829],
                   [241, 1828],
                   [240, 1829],
                   [240, 1828],
                   [240, 1827],
                   [239, 1828],
                   [239, 1827],
                   [239, 1826],
                   [239, 1825],
                   [238, 1828],
                   [238, 1827],
                   [238, 1826],
                   [241, 1835],
                   [242, 1838],
                   [241, 1838],
                   [458, 1132],
                   [458, 1131],
                   [457, 1131],
                   [457, 1130],
                   [457, 1130],
                   [804, 856],
                   [805, 857],
                   [805, 856],
                   [805, 855],
                   [805, 854],
                   [806, 857],
                   [806, 856],
                   [806, 855],
                   [806, 854],
                   [807, 854],
                   [807, 855],
                   [807, 856],
                   [807, 857],
                   [808, 857],
                   [808, 856],
                   [808, 855],
                   [808, 855],
                   [520, 470],
                   [520, 469],
                   [521, 469],
                   [521, 468],
                   [522, 469],
                   [522, 468],
                   [522, 467],
                   [522, 466],
                   [523, 469],
                   [523, 468],
                   [523, 468],
                   [523, 467],
                   [523, 466],
                   [523, 466],
                   [523, 465],
                   [523, 465],
                   [523, 464],
                   [523, 464],
                   [523, 463],
                   [524, 464],
                   [524, 463],
                   [524, 462],
                   [524, 461],
                   [524, 460],
                   [524, 459],
                   [524, 458],
                   [523, 459],
                   [523, 458],
                   [523, 457],
                   [522, 457],
                   [522, 456],
                   [521, 456],
                   [521, 455],
                   [521, 454],
                   [520, 455],
                   [520, 454],
                   [520, 453],
                   [520, 455],
                   [520, 454],
                   [520, 453],
                   [519, 455],
                   [519, 454],
                   [519, 453],
                   [518, 455],
                   [518, 454],
                   [518, 453],
                   [517, 455],
                   [517, 454],
                   [516, 454],
                   [516, 453],
                   [517, 453],
                   [517, 453],
                   [604, 268],
                   [604, 267],
                   [604, 266],
                   [603, 267],
                   [603, 268],
                   [606, 266],
                   [198, 459],
                   [198, 458],
                   [198, 457],
                   [199, 459],
                   [199, 458],
                   [734, 635],
                   [734, 634],
                   [683, 3451],
                   [683, 3450],
                   [683, 3449],
                   [684, 3384],
                   [684, 3383],
                   [684, 3388],
                   [684, 3387]])

for i in range(badpix1.shape[0]):
    print('[%d, %d],'%(badpix1[i,0], badpix1[i,1]-10))

'''                   
baddata = np.zeros((4210, 1024))
for i in range(badpix1.shape[0]):
    baddata[badpix1[i,1]-1-10, badpix1[i,0]-1] = 1

# Creating HDU data
outhdu = fits.PrimaryHDU(data=baddata)
outhdl = fits.HDUList([outhdu])
outhdl.writeto(file)
outhdl.close()

file = fi.filibdir+'dastposition2.fits'
if os.path.exists(file):
    print('Do you want to overwrite %S? :[y/n]'+file)
    key = raw_input()
    if key == 'y' or key =='Y':
        os.remove(file)
'''
badpix2 = np.array([\
                    [486, 193],
                    [486, 192],
                    [486, 191],
                    [487, 192],
                    [487, 193],
                    [956, 840],
                    [956, 839],
                    [955, 839],
                    [955, 838],
                    [954, 838],
                    [954, 837],
                    [954, 836],
                    [954, 835],
                    [953, 838],
                    [953, 837],
                    [953, 836],
                    [953, 835],
                    [953, 834],
                    [952, 836],
                    [952, 835],
                    [952, 834],
                    [726, 1232],
                    [726, 1231],
                    [726, 1230],
                    [725, 1231],
                    [725, 1230],
                    [725, 1229],
                    [724, 1230],
                    [724, 1229],
                    [724, 1228],
                    [723, 1229],
                    [723, 1228],
                    [723, 1227],
                    [722, 1234],
                    [722, 1233],
                    [722, 1232],
                    [722, 1231],
                    [722, 1230],
                    [722, 1229],
                    [722, 1228],
                    [721, 1233],
                    [721, 1232],
                    [721, 1232],
                    [984, 1603],
                    [984, 1602],
                    [910, 70],
                    [910, 71],
                    [910, 69],
                    [911, 69],
                    [911, 70],
                    [911, 71],
                    [893, 285],
                    [893, 284],
                    [757, 1591],
                    [757, 1590],
                    [298, 1714],
                    [298, 1713],
                    [298, 1712],
                    [297, 1712],
                    [297, 1711],
                    [297, 1710],
                    [298, 1710],
                    [298, 1709],
                    [338, 1880],
                    [338, 1879],
                    [338, 1878],
                    [338, 1877],
                    [338, 1876],
                    [338, 1875],
                    [337, 1879],
                    [337, 1878],
                    [337, 1877],
                    [337, 1876],
                    [592, 2573],
                    [592, 2572],
                    [591, 2573],
                    [591, 2572],
                    [590, 2574],
                    [590, 2573],
                    [590, 2572],
                    [589, 2574],
                    [589, 2573],
                    [589, 2572],
                    [588, 2574],
                    [588, 2573],
                    [588, 2572],
                    [586, 3117],
                    [586, 3116],
                    [585, 3118],
                    [585, 3117],
                    [585, 3116],
                    [305, 3576],
                    [305, 3575],
                    [292, 3685],
                    [292, 3684],
                    [292, 3683],
                    [292, 3682],
                    [292, 3681],
                    [291, 3685],
                    [291, 3684],
                    [291, 3683],
                    [291, 3682],
                    [293, 3683],
                    [293, 3682]])

print('\n')
for i in range(badpix2.shape[0]):
    print('[%d, %d],'%(badpix2[i,0], badpix2[i,1]-10))

'''
baddata = np.zeros((4210, 1024))
for i in range(badpix2.shape[0]):
    baddata[badpix2[i,1]-1-10, badpix2[i,0]-1] = 1

# Creating HDU data
outhdu = fits.PrimaryHDU(data=baddata)
outhdl = fits.HDUList([outhdu])
outhdl.writeto(file)
outhdl.close()
'''
